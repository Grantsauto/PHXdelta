[gcode_macro PURGE_ARC]
variable_start_angle: 180           # angle in Degree of start point
variable_end_angle: 90               # angle in Degree of end point
variable_clockwise: 'true'          # purge clockwise or counterclockwise
variable_edge_offset: 20             # offset in mm from edge of bed defined in printer.cfg
variable_purge_amount: 40          # purge ammount in mm of filament
variable_purge_speed: 25            # purge line printing speed in mm/s
variable_travel_speed: 50           # travel speed in mm/s
variable_retract_after_purge: 0.25  # retraction in mm after purge line has been printed
variable_retract_speed: 30          # retraction speed in mm/s
gcode:
  {% set radius = printer.configfile.settings.printer.delta_radius - edge_offset | float %} 
  {% set start_angle_rads = ((start_angle * 2 * 3.14) / 360) | float %}
  {% set end_angle_rads = ((end_angle * 2 * 3.14) / 360) | float %}

  # calculate start coordinates
  {% set sin0 = (start_angle_rads) %}
  {% set sin1 = ((start_angle_rads ** 3) / 6) | float %}
  {% set sin2 = ((start_angle_rads ** 5) / 120) | float %}
  {% set sin3 = ((start_angle_rads ** 7) / 5040) | float %}
  {% set sin4 = ((start_angle_rads ** 9) / 362880) | float %}
  {% set sin5 = ((start_angle_rads ** 11) / 39916800) | float %}
  {% set sin6 = ((start_angle_rads ** 13) / 6227020800) | float %}
  {% set sin7 = ((start_angle_rads ** 15) / 1307674368000) | float %}
  {% set sin = (-(sin0 - sin1 + sin2 - sin3 + sin4 - sin5 + sin6 - sin7)) | float %}

  {% set cos0 = (1) | float %}
  {% set cos1 = ((start_angle_rads ** 2) / 2) | float %}
  {% set cos2 = ((start_angle_rads ** 4) / 24) | float %}
  {% set cos3 = ((start_angle_rads ** 6) / 720) | float %}
  {% set cos4 = ((start_angle_rads ** 8) / 40320) | float %}
  {% set cos5 = ((start_angle_rads ** 10) / 3628800) | float %}
  {% set cos6 = ((start_angle_rads ** 12) / 479001600) | float %}
  {% set cos7 = ((start_angle_rads ** 14) / 87178291200) | float %}
  {% set cos = (-(cos0 - cos1 + cos2 - cos3 + cos4 - cos5 + cos6 - cos7)) | float %}
  {% set start_x = (radius * sin * -1) |round(4) | float %}
  {% set start_y = (radius * cos * -1) |round(4) | float %}

  # calculate end coordinates
  {% set sin0 = (end_angle_rads) %}
  {% set sin1 = ((end_angle_rads ** 3) / 6) | float %}
  {% set sin2 = ((end_angle_rads ** 5) / 120) | float %}
  {% set sin3 = ((end_angle_rads ** 7) / 5040) | float %}
  {% set sin4 = ((end_angle_rads ** 9) / 362880) | float %}
  {% set sin5 = ((end_angle_rads ** 11) / 39916800) | float %}
  {% set sin6 = ((end_angle_rads ** 13) / 6227020800) | float %}
  {% set sin7 = ((end_angle_rads ** 15) / 1307674368000) | float %}
  {% set sin = (-(sin0 - sin1 + sin2 - sin3 + sin4 - sin5 + sin6 - sin7)) | float %}

  {% set cos0 = (1) | float %}
  {% set cos1 = ((end_angle_rads ** 2) / 2) | float %}
  {% set cos2 = ((end_angle_rads ** 4) / 24) | float %}
  {% set cos3 = ((end_angle_rads ** 6) / 720) | float %}
  {% set cos4 = ((end_angle_rads ** 8) / 40320) | float %}
  {% set cos5 = ((end_angle_rads ** 10) / 3628800) | float %}
  {% set cos6 = ((end_angle_rads ** 12) / 479001600) | float %}
  {% set cos7 = ((end_angle_rads ** 14) / 87178291200) | float %}
  {% set cos = (-(cos0 - cos1 + cos2 - cos3 + cos4 - cos5 + cos6 - cos7)) | float %}
  {% set end_x = (radius * sin * -1) |round(4) | float %}
  {% set end_y = (radius * cos * -1) |round(4) | float %}

  G0 Z5 F1500                                               # lift z to not crash the nozzle  
  G0 X{start_x} Y{start_y} F{travel_speed * 60}             # move to start of purge line
  G0 Z0.5 F1500                                             # lover Z to purge line thicknes
  G92 E0                                                    # reset extruder
  {% if clockwise == 'true' %}
    G2 X{end_x} Y{end_y} I{start_x * -1} J{start_y * -1} E{purge_amount} F{purge_speed * 60}
  {% else %}
    G3 X{end_x} Y{end_y} I{start_x * -1} J{start_y * -1} E{purge_amount} F{purge_speed * 60}
  {% endif %}
  G92 E0                                                    # reset extruder
  G1 E{retract_after_purge * -1} F{retract_speed * 60}      # lift Z and retract to prevent oozing
  G1 Z1 F{travel_speed * 60}     