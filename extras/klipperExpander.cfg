[mcu expander]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_140003800243534133343520-if00

restart_method: command

[output_pin caselight]
pin: expander:PA0
pwm: true
cycle_time: 0.010
value: 0
shutdown_value: 0



[output_pin mosfet1]
pin: expander:PA1
pwm: true
cycle_time: 0.010
value: 0
shutdown_value: 0

#[output_pin mosfet2]
#pin: expander:PA2
#pwm: true
#cycle_time: 0.010
#value: 0
#shutdown_value: 0

[output_pin mosfet3]
pin: expander:PA3
pwm: true
cycle_time: 0.010
value: 0
shutdown_value: 0

# Status LED lights when klipper connects 
[static_digital_output onboardLED]
pins: !expander:PA4


[neopixel expanderPixel]
pin: expander:PB1
chain_count: 1
initial_RED: 0.9
initial_GREEN: 0.3
initial_BLUE: 0.0

#[temperature_sensor chamber2]
#sensor_type: Generic 3950 #ATC Semitec 104GT-2
#sensor_pin: expander:PA6
#gcode_id=10

[temperature_sensor chamber]
sensor_type: Generic 3950 #ATC Semitec 104GT-2
sensor_pin: expander:PA5
gcode_id=11

# Other Pins
# T0 = PA6
# T1 = PA5
# GPIO = PA7

[temperature_fan mcu_fan]
pin: expander:PA2
max_power: 1.0
shutdown_speed: 0
#cycle_time:
#hardware_pwm:
kick_start_time: 0.25
#   See the "fan" section in example.cfg for a description of the
#   above parameters.
sensor_type: temperature_host
#sensor_pin: analog13
#   See the "heater" section for details about the sensor_type and
#   sensor_pin parameters.
min_temp: 0
max_temp: 75
#   The maximum range of valid temperatures (in Celsius) that the
#   sensor must remain within. This controls a safety feature
#   implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller
#   will go into a shutdown state. Set this range just wide enough so
#   that reasonable temperatures do not result in an error. These
#   parameters must be provided.
target_temp: 55.0
#   A temperature (in Celsius) that will be the target temperature.
#   The default is 40 degrees.
max_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when the sensor temperature exceeds the set value.
#   The default is 1.0.
min_speed: 0.3
#   The minimum fan speed (expressed as a value from 0.0 to 1.0) that
#   the fan will be set to when the sensor temperature is the set
#   value.  The default is 0.3.
control: watermark
#   Control algorithm (either watermark or pid). This parameter must
#   be provided.
#pid_Kp: 40
#   Kp is the "proportional" constant for the pid. This parameter must
#   be provided for PID heaters.
#pid_Ki: 0.2
#   Ki is the "integral" constant for the pid. This parameter must be
#   provided for PID heaters.
#pid_Kd: 0.1
#   Kd is the "derivative" constant for the pid. This parameter must
#   be provided for PID heaters.
#pid_deriv_time: 2.0
#   A time value (in seconds) over which the derivative in the pid
#   will be smoothed to reduce the impact of measurement noise. The
#   default is 2 seconds.
#pid_integral_max:
#   The maximum "windup" the integral term may accumulate. The default
#   is to use the same value as max_power.