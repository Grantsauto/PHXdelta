[gcode_macro VERIFY_AXIS_POSITION]
gcode:
    {% set axis_name = params.AXIS %}
    {% set expected_position = params.EXPECTED|float %}
    {% set axisstate_verbose = False %}

    {% set current_axis_position = printer.gcode_move.position[axis_name] %}

    {% if current_axis_position != expected_position %}
        {action_raise_error("Wrong axis position for %s. Expected %f, got %f"
        % (axis_name, expected_position, current_axis_position))}
    {% else %}
      {% if axisstate_verbose %}
        M118 Axis {axis_name} OK!
      {% endif %}
    {% endif %}

[gcode_macro CHECK_RECTRACTION_CLEARED]
gcode:
  {% set retract_state = False %}
  {% set retract_state = printer.firmware_retraction.retract_state %}
  {% if retract_state == True %}
    {action_raise_error("Retraction should be cleared!")}
  {% endif%}


[controller_temperature_fan my_temp_fan]
pin: PB5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 210

stepper: stepper_a, stepper_b, stepper_c

[delayed_gcode RESTORE_SELECTED_SPOOLS]
initial_duration: 0.1
gcode:
  {% set svv = printer.save_variables.variables %}
  {% for object in printer %}
    {% if object.startswith('gcode_macro ') and printer[object].spool_id is defined %}
      {% set macro = object.replace('gcode_macro ', '') %}
      {% set var = (macro + '__SPOOL_ID')|lower %}
      {% if svv[var] is defined %}
        SET_GCODE_VARIABLE MACRO={macro} VARIABLE=spool_id VALUE={svv[var]}
      {% endif %}
    {% endif %}
  {% endfor %}
