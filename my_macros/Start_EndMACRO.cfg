[gcode_macro PRINT_START]
gcode:

  {% set BED_TEMP = params.BED_TEMP|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|float %}

  M117 Start Sequence
  SET_PIN PIN=caselight VALUE=1.0
  SET_PIN PIN=mosfet1 VALUE=1.00
  CLEAR_RETRACTION
  CG28
  G21
  G90
  M83
  G92 E0
  M107
  M140 S{BED_TEMP}
  M190 S{BED_TEMP}
  M117 Heating Up!! 
  G1 Z5.0 F6500 ;move the platform down 5mm
  #G1 X0 Y13 F8500
  M117 Bed at TEMP
  _SET_MPC_MATERIAL MATERIAL={params.MATERIAL} 
  M104 S{EXTRUDER_TEMP} ; set extruder temp
  #G1 X0 Y-75 Z5 F8500
  M109 S{EXTRUDER_TEMP} ; wait for extruder temp
  #BED_MESH_PROFILE LOAD=platext
  # M83
  # G92 E0                         ; zero the extruder
  # G1 E12.0 F1000
  # #MMMS_START INITIAL_TOOL={params.INITIAL_EXTRUDER}
  # {% if (params.BYPASS|default(0)|int) %}
  #   DESYNC_ALL_TOOLS
  # {% else %}
  #   # You can also put your ENDLESS_START line here too
  #   MMMS_START INITIAL_TOOL={params.INITIAL_EXTRUDER}
  # {% endif %}
  # PURGE_ARC
  # LINE_PURGE
  # MY_PURGE
  SET_LED_EFFECT EFFECT=Rainbow
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=5
  MMU_CHECK_GATES
  M117 PHX DELTA AWAY...
  no_leds
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=mcu_fan TARGET=35

  ################################################
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
  SET_GCODE_OFFSET Z=0 MOVE=1
  M400                           ; wait for buffer to clear
  G28 X0 Y0 F9000
  M83
  G92 E0                         ; zero the extruder
  # G1 E-12.0 F2000
  # {% if not (params.BYPASS|default(0)|int) %}
  #   MMMS_END
  # {% endif %}                ; retract filament
  TURN_OFF_HEATERS
  M83
  G92 E0
  M107                           ; turn off fan
  M18 S180                       ;disable motors after 180s
  G90
  CLEAR_RETRACTION
  SET_PIN PIN=caselight VALUE=0.95
  SET_PIN PIN=mosfet1 VALUE=0.35
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=mcu_fan TARGET=55
  M117
  
  ################################################

[gcode_macro MY_PURGE]
gcode:

  G92 E0 ;reset extruder
  G1 X-75 Y0 Z1 F3500
  G92 E0
  M117 Primeline ...  
  G3 X0 Y-95 I100 Z0.4 E50 F1000
  G92 E0


  ################################################

[gcode_macro SAVE_IT]
gcode:
   SAVE_CONFIG RESTART=0

  ################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE_OLD
gcode:
  ##### get user parameters or use default #####
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
  {% set retract = client.cancel_retract|default(5.0)|abs %}
  ##### define park position #####
  {% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
            else "X=" ~ client.park_at_cancel_x %}
  {% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
            else "Y=" ~ client.park_at_cancel_y %}
  {% set custom_park = park_x|length > 0 or park_y|length > 0 %}
  ##### end of definitions #####
  # restore idle_timeout time if needed
  {% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
    SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
  {% endif %}
  {% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
  _CLIENT_RETRACT LENGTH={retract}
  MMMS__UNLOAD
  TURN_OFF_HEATERS
  M106 S0
  {client.user_cancel_macro|default("")}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
  # clear pause_next_layer and pause_at_layer as preparation for next print
  SET_PAUSE_NEXT_LAYER ENABLE=0
  SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
  SET_PIN PIN=mosfet1 VALUE=0.35
  CANCEL_PRINT_BASE


